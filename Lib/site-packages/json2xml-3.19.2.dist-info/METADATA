Metadata-Version: 2.1
Name: json2xml
Version: 3.19.2
Summary: Simple Python Library to convert JSON to XML
Home-page: https://github.com/vinitkumar/json2xml
Author: Vinit Kumar
Author-email: mail@vinitkumar.me
License: Apache Software License 2.0
Keywords: json2xml
Platform: UNKNOWN
Classifier: Development Status :: 6 - Mature
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/x-rst
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: certifi (==2021.5.30)
Requires-Dist: charset-normalizer (==2.0.6)
Requires-Dist: defusedxml (==0.7.1)
Requires-Dist: idna (==3.2)
Requires-Dist: requests (==2.26.0)
Requires-Dist: urllib3 (==1.26.7)

========
json2xml
========


.. image:: https://badge.fury.io/py/json2xml.svg
.. image:: https://static.pepy.tech/personalized-badge/json2xml?period=total&units=international_system&left_color=blue&right_color=orange&left_text=Downloads
 :target: https://pepy.tech/project/json2xml
.. image:: https://github.com/vinitkumar/json2xml/actions/workflows/pythonpackage.yml/badge.svg
.. image:: https://img.shields.io/pypi/pyversions/json2xml.svg
.. image:: https://readthedocs.org/projects/json2xml/badge/?version=latest
        :target: https://json2xml.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status
.. image:: https://codecov.io/gh/vinitkumar/json2xml/branch/master/graph/badge.svg?token=Yt2h55eTL2
      :target: https://codecov.io/gh/vinitkumar/json2xml


Simple Python Library to convert JSON to XML

* Free software: Apache Software License 2.0
* Documentation: https://json2xml.readthedocs.io.


Update
------

The dict2xml project has been integrated in the project itself. This helped with cleaning up the code
and making improvements. Long term goal for the project is to reduce the number of dependencies.

Features
--------

It lets you convert json to xml in following ways:

* from a `json` string
* from a `json` file
* from an API that emits `json` data

Usage
-----

The usage is simple:


.. code-block:: python

    from json2xml import json2xml
    from json2xml.utils import readfromurl, readfromstring, readfromjson

    # get the xml from an URL that return json
    data = readfromurl("https://coderwall.com/vinitcool76.json")
    print(json2xml.Json2xml(data).to_xml())

    # get the xml from a json string
    data = readfromstring(
        '{"login":"mojombo","id":1,"avatar_url":"https://avatars0.githubusercontent.com/u/1?v=4"}'
    )
    print(json2xml.Json2xml(data).to_xml())

    # get the data from an URL
    data = readfromjson("examples/licht.json")
    print(json2xml.Json2xml(data).to_xml())


Custom Wrappers and indent
--------------------------

By default, a wrapper `all` and pretty `True` is set. However, you can change this easily in your code like this:

.. code-block:: python

    from json2xml import json2xml
    from json2xml.utils import readfromurl, readfromstring, readfromjson

    data = readfromstring(
        '{"login":"mojombo","id":1,"avatar_url":"https://avatars0.githubusercontent.com/u/1?v=4"}'
    )
    print(json2xml.Json2xml(data, wrapper="all", pretty=True).to_xml())


Outputs this:

.. code-block:: xml

    <?xml version="1.0" ?>
    <all>
      <login type="str">mojombo</login>
      <id type="int">1</id>
      <avatar_url type="str">https://avatars0.githubusercontent.com/u/1?v=4</avatar_url>
    </all>

Omit List item
--------------

Assume the following json input

.. code-block:: json

    {
      "my_items": [
        { "my_item": { "id": 1 } },
        { "my_item": { "id": 2 } }
      ],
      "my_str_items": ["a", "b"]
    }

By default, items in an array are wrapped in <item></item>.

Default output:

.. code-block:: xml

    <?xml version="1.0" ?>
    <all>
      <my_items type="list">
        <item type="dict">
          <my_item type="dict">
            <id type="int">1</id>
          </my_item>
        </item>
        <item type="dict">
          <my_item type="dict">
            <id type="int">2</id>
          </my_item>
        </item>
      </my_items>
      <my_str_items type="list">
        <item type="str">a</item>
        <item type="str">b</item>
      </my_str_items>
      <empty type="list"/>
    </all>

However, you can change this behavior using the item_wrap property like this:

.. code-block:: python

    from json2xml import json2xml
    from json2xml.utils import readfromurl, readfromstring, readfromjson

    data = readfromstring('{"my_items":[{"my_item":{"id":1} },{"my_item":{"id":2} }],"my_str_items":["a","b"]}')
    print(json2xml.Json2xml(data, item_wrap=False).to_xml())

Outputs this:

.. code-block:: xml

    <?xml version="1.0" ?>
    <all>
      <my_items type="list">
        <my_item type="dict">
          <id type="int">1</id>
        </my_item>
        <my_item type="dict">
          <id type="int">2</id>
        </my_item>
      </my_items>
      <my_str_items type="str">a</my_str_items>
      <my_str_items type="str">b</my_str_items>
    </all>

Optional Attribute Type Support
-------------------------------

Now, we can also specify if the output xml needs to have type specified or not. Here is the usage:

 .. code-block:: python

    from json2xml import json2xml
    from json2xml.utils import readfromurl, readfromstring, readfromjson

    data = readfromstring(
        '{"login":"mojombo","id":1,"avatar_url":"https://avatars0.githubusercontent.com/u/1?v=4"}'
    )
    print(json2xml.Json2xml(data, wrapper="all", pretty=True, attr_type=False).to_xml())


Outputs this:

.. code-block:: xml

    <?xml version="1.0" ?>
    <all>
      <login>mojombo</login>
      <id>1</id>
      <avatar_url>https://avatars0.githubusercontent.com/u/1?v=4</avatar_url>
    </all>


The methods are simple and easy to use and there are also checks inside of code to exit cleanly
in case any of the input(file, string or API URL) returns invalid JSON.

Testing
-------

This is provided by pytest, which is straight forward.

 .. code-block:: bash

    virtualenv venv -p $(which python3.9)
    pip install -r requirements-dev.txt
    python setup.py install
    pytest


Credits
-------

This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.

.. _Cookiecutter: https://github.com/audreyr/cookiecutter
.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage


History
=======

3.19.2 / 2022-06-09
===================

  * escape xml char when having attrs (#144)
  * feat: adjust pytest config setting for easy loggin
  * feat: bump python 3.10 and 3.11 version (#142)

3.19.1 / 2022-06-05
===================

  * bump version of docs building
  * chore(deps): bump waitress from 2.1.1 to 2.1.2 in /docs (#141)
  * Docs update for dicttoxml (#140)

3.19.0 / 2022-05-20
===================

  * Setting xsi location (#135)
  * Repeat list headers (#138)
  * add python3.11 support (#139)
  * improved docs dicttoxml (#134)
  * Fix/types working check ci mypy (#133)
  * fix: ci supports mypy now (#132)
  * generate changelog
  * Feat/remove logging by default (#131)
  * Merge two dev requirements file (#129)
  * remove old unused config
  * feat: add types (#125)
  * fix: issue with twine check
  * fix: issue with long description
  * refactor: xmltodict is only test dependency (#124)
  * fix: add correct list of contributors
  * feat: generate changelog
  * improvements on dicttoxml (#121)
  * feat: add correct badge
  * feat: use codecov
  * fix: flake8 tests
  * fix: add coverage to the mix
  * fix: lint issues and CI
  * fix: check new CI stuff like lint and coverage
  * feat: bump version and generate changelog
  * fix: issue with wrong output for boolean list
  * fix: pull requests also trigger action runs

3.18.0 / 2022-04-23
===================

  * bump version
  * improvements on dicttoxml (#121)
  * feat: add correct badge
  * feat: use codecov
  * fix: flake8 tests
  * fix: add coverage to the mix
  * fix: lint issues and CI
  * fix: check new CI stuff like lint and coverage
  * feat: bump version and generate changelog
  * fix: issue with wrong output for boolean list
  * fix: pull requests also trigger action runs

3.17.1 / 2022-04-20
===================

  * fix: issue with wrong output for boolean list
  * fix: pull requests also trigger action runs

3.17.0 / 2022-04-18
===================

  * fix: return correct xml type for bool (#119)
  * feat: add download counter
  * fix: check latest alpha (#116)
  * fix: check latest alpha (#115)
  * chore(deps): bump waitress from 2.0.0 to 2.1.1 in /docs (#114)
  * feat: only python3 wheels are created now

3.15.0 / 2022-02-24
===================

  * Merge remote-tracking branch 'origin/master'
  * bump version and prepare for new release
  * feat: new python versions to test against (#110)
  * Fix/perflint (#109)
  * feat: support latest version of 3.10 and 3.11 alpha3 (#98)
  * feat: generate changelog
  * fix: remove unused imports
  * bump version
  * fix: issue with uncaught UnicodeDecodeError
  * cancel jobs for concurrent builds in same PR
  * pypi is stable now
  * feat: update tox config

v3.14.0 / 2022-02-10
====================

  * fix: remove unused imports
  * bump version
  * fix: issue with uncaught UnicodeDecodeError
  * cancel jobs for concurrent builds in same PR
  * pypi is stable now
  * feat: update tox config

v3.11.0 / 2022-01-31
====================

  * bump version
  * feat: remove comments
  * Feat: install pytest separately and run pytests now
  * fix tox
  * add some documentation on testing
  * split testing libs away from release
  * fix: update changelog
  * bump version to 3.10.0
  * fix: we support Python3.7+ now (#101)
  * Issue: #99 dicttoxml igores the root param (#100)

v3.10.0 / 2022-01-29
====================

  * bump version to 3.10.0
  * fix: we support Python3.7+ now (#101)
  * Issue: #99 dicttoxml igores the root param (#100)
  * feat: bump to a rc1 version
  * Add support for Python3.11 alpha and upgrade pytest and py (#97)
  * Feat: drop 3.11.0 alphas from the test matrix for now
  * feat: find the versions that are in the CI
  * fix: typo in the name of python 3.11 version
  * sunsetting python 3.6 and add support for python3.11 alpha
  * chore: prepare for release 3.9.0
  * fix email
  * fix readme
  * - update readme - add tests - refactor
  * resolve #93
  * chore: run black on readme doc
  * fix: more issues
  * fix: garbage in history
  * feat: generate history

v3.9.0 / 2021-12-19
===================

  * feat: generate history
  * feat: item_wrap for str and int (#93)

v3.8.4 / 2021-10-24
===================

  * bump version
  * fix: version bump and readme generator

v3.8.3 / 2021-10-24
===================

  * bump version
  * feat: reproduce the error in the test (#90)
  * Feat/version (#88)
  * Feat/docs theme change (#87)
  * Feat/docs theme change (#86)
  * Feat/docs theme change (#85)
  * Feat/docs theme change (#84)
  * Feat/docs theme change (#83)
  * feat: update the docs theme (#82)

v3.8.0 / 2021-10-07
===================

  * Feat/security improvements (#81)
  * :arrow_up: feat: python 3.10 released (#79)

v3.7.0 / 2021-09-11
===================

  * :bookmark: feat: final release for v3.7.0
  * :bookmark: feat: bump version

v3.7.0beta2 / 2021-09-10
========================

  * Feat/cleanup and deprecation fix (#78)
  * item ommision (#76)
  * Create FUNDING.yml

v3.7.0beta1 / 2021-08-28
========================

  * Feat/fork and update dict2xml (#75)
  * chore(deps-dev): bump pip from 18.1 to 19.2 (#73)
  * Delete .travis.yml
  * chore(deps-dev): bump lxml from 4.6.2 to 4.6.3 (#68)
  * Bump lxml from 4.1.1 to 4.6.2 (#66)

v3.6.0 / 2020-11-12
===================

  * Feat/wip exceptions (#65)
  * Add .deepsource.toml
  * feat: upgrade the actions
  * feat: try & support more os and python versions
  * Update pythonpackage.yml

v3.5.0 / 2020-08-24
===================

  * feat: remove six as dependency as we are python3 only, resolves #60 (#61)
  * feat: update makefile for the correct command

v3.4.1 / 2020-06-10
===================

  * fix: issues with pypi release and bump version
  * Feat/attr type docs (#58)
  * fix: conflicts
  * Feat/attr type docs (#57)
  * Merge github.com:vinitkumar/json2xml
  * Update json2xml.py (#56)
  * Merge github.com:vinitkumar/json2xml
  * feat: fix typo in the readme

v3.3.3 / 2020-02-05
===================

  * Update README.rst
  * fix: issue with pypi uploads
  * fix: version
  * bump version
  * Update pythonpackage.yml
  * Refactor/prospector cleanup (#50)
  * Update pythonpackage.yml
  * Create pythonpackage.yml
  * Update README.rst
  * fix: typo in readme
  * bump version
  * Feature/attribute support (#48)
  * Feature/attribute support (#47)
  * chore: bump version
  * fix: remove print statement in json read because it confuses people
  * fix typo in readme

v3.0.0 / 2019-02-26
===================

  * Fix/coveralls (#43)
  * update coverage report (#42)
  * Merge pull request #41 from vinitkumar/fix/coveralls
  * add python coveralls
  * Merge pull request #40 from vinitkumar/refactor/cookiecutter
  * update coverage
  * add image for coveralls
  * coverage and coveralls integrations
  * try and trigger coveralls too
  * fix code block in readme
  * add doc about custom wrapper
  * try at reducing the dependencies
  * add tests for custom wrappers as well
  * add tests for actualy dict2xml conversion
  * fix: remove missing import
  * fix: code syntax highlight in the readme again
  * fix: code syntax highlight in the readme again
  * fix: code syntax highlight in the readme
  * chore: update readme with code samples
  * test: add testcases for the different utils method
  * remove unused imports
  * check the third method for generating dict from json string too
  * run correct test files
  * fix tests
  * update requirements and setuptools
  * refactor the module into more maintainable code
  * chore: add boilerplate
  * remove all legacy
  * Fix/cleanup (#38)
  * cleanup: remove unused modules (#37)
  * Merge pull request #35 from vinitkumar/improve-structure
  * cleanup
  * one again try to get the build working
  * travis need full version for latest supported python
  * do not hardcode version in a series
  * update grammar
  * fix conflicts
  * Update LICENSE
  * cleanup readme
  * remove cli
  * some cleanup and update the tests
  * Update readme.md
  * Cleanup Readme.md
  * Update issue templates
  * fix vulnerabilities in requests


